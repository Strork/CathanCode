{
	// Place your allOJ 工作区 snippets here. Each snippet is defined under a snippet name and has a scope, prefix, body and 
	// description. Add comma separated ids of the languages where the snippet is applicable in the scope field. If scope 
	// is left empty or omitted, the snippet gets applied to all languages. The prefix is what is 
	// used to trigger the snippet and the body will be expanded and inserted. Possible variables are: 
	// $1, $2 for tab stops, $0 for the final cursor position, and ${1:label}, ${2:another} for placeholders. 
	// Placeholders with the same ids are connected.
	// Example:
	// "Print to console": {
	// 	"scope": "javascript,typescript",
	// 	"prefix": "log",
	// 	"body": [
	// 		"console.log('$1');",
	// 		"$2"
	// 	],
	// 	"description": "Log output to console"
	// }
	"newcppfile":{
        "prefix": "noi",
        "body": [
            "#include <bits/stdc++.h>",
            "using namespace std;",
			"",
            "int main() {",
            "    $1",
            "    return 0;",
            "}",
        ],
        "description": "for nomal cpp"
    },
	"read int": {
        "prefix": "read_int",
        "body": [
            "int read() {",
            "    int read_num = 0, posibal = 1; char chh = 0;",
            "    while (!isdigit(chh)) { if (chh=='-') posibal=-1;chh=getchar(); }",
            "    while (isdigit(chh)) { read_num=read_num*10+(chh-'0');chh=getchar(); }",
            "    return read_num * posibal;",
            "}"
        ],
        "description": "read int"
    },
	"for any to n": {
		"prefix": "anyton",
		"body": [
			"for (int ${1:i} = 1; ${2:i} <= n; ++${3:i}) {",
			"    $0",
			"}"
		],
		"description": "for any to n"
	},
	"for any to any": {
		"prefix": "forfor",
		"body": [
			"for (int ${1:j} = ${2:1}; ${3:j} <= ${4:m}; ++${5:j}) {",
			"    $0",
			"}"
		],
		"description": "for any to any"
	},
}